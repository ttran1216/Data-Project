>>>malloy
source: chem_quantity_lost is duckdb.table('./chem-quantity-lost.csv') extend {
  measure: total_quantity_lost is sum(milliliter)
}

source: chem_thefts_by_business_and_loss_type is duckdb.table('./chem-thefts-by-business-and-loss-type.csv') extend {
  measure: total_thefts is count()
}
source: chem_thefts_by_state_and_business is duckdb.table('./chem-thefts-by-state-and-business.csv') 
source: chem_thefts_by_state_and_loss_type is duckdb.table('./chem-thefts-by-state-and-loss-type.csv') extend {
  measure: total_thefts is count()
}

source: csub_quantity_lost is duckdb.table('./csub-quantity-lost.csv') extend {
  measure: total_quantity_lost is sum(milliliter)
  
}

source: csub_thefts_by_business_and_loss_type is duckdb.table('./csub-thefts-by-business-and-loss-type.csv') extend {
  measure: total_thefts is count()
}

source: csub_thefts_by_state_and_business is duckdb.table('./csub-thefts-by-state-and-business.csv') extend {
  measure: total_thefts is count()
}

source: csub_thefts_by_state_and_loss_type is duckdb.table('./csub-thefts-by-state-and-loss-type.csv') extend {
  measure: total_thefts is count()
}
>>>markdown
Summarizing the overall quantity of chemicals lost. This will give us a basic understanding of the dataset.
>>>malloy
# bar_chart
run: chem_quantity_lost -> {
  group_by: state
  aggregate: total_quantity_lost is sum(milliliter)
}
>>>markdown
Next, let's summarize the total number of thefts for each business activity.
>>>malloy
# bar_chart
run: chem_thefts_by_business_and_loss_type -> {
  group_by: business_activity
  aggregate: total_thefts is count()
}
>>>markdown
What is the total quantity of chemicals lost in each business activity?
>>>malloy
# line_chart
run: chem_quantity_lost -> {
  group_by: business_activity
  aggregate:total_quantity_lost is sum(milliliter)
  limit: 5
}
>>>markdown
How many thefts occurred for each loss type?
>>>malloy
# bar_chart
run: chem_quantity_lost -> {
  group_by: loss_type
  aggregate: total_quantity_lost is sum(milliliter)
}
>>>markdown
What is the total number of thefts during a given period?
>>>malloy

run: chem_thefts_by_state_and_loss_type -> {
  group_by: period
  aggregate: total_thefts is count()
}
>>>markdown
 How much quantity was lost in subcategories?
>>>malloy

run: csub_quantity_lost -> {
  group_by: business_activity
  aggregate: total_quantity_lost is sum(milliliter)
}
>>>markdown
What is the total loss by state and period?
>>>malloy
run: chem_quantity_lost -> {
  group_by: state, period
  aggregate: total_quantity_lost is sum(milliliter)
}
>>>markdown
Which states have the highest theft counts?
>>>malloy
run: chem_thefts_by_state_and_loss_type -> {
  group_by: state
  aggregate: total_thefts is count()
  order_by: total_thefts desc
  limit: 5
}
>>>markdown
What is the most common loss type for chemicals?
>>>malloy
run: chem_quantity_lost ->{
    group_by: loss_type
    aggregate: losses is count()
    order_by: losses desc
}
>>>markdown
Where is loss in transit which is the most common for loss of chemicals?
>>>malloy
run: chem_quantity_lost ->{
    where: loss_type = "LOSS IN TRANSIT"
    group_by: state
    nest: bystate is{
        group_by: loss_type 
        aggregate: losses is count()
        order_by: losses desc
    }
}
>>>markdown
 What is the year-over-year change in total thefts for each business activity?
>>>malloy
run: chem_thefts_by_business_and_loss_type -> {
  group_by: business_activity, period
  aggregate: total_thefts
  calculate: theft_change is total_thefts - lag(total_thefts) {
    order_by: period
  }
  order_by: period asc
}
>>>markdown
What percentage of total thefts does each business activity account for?
>>>malloy
run: chem_thefts_by_business_and_loss_type -> {
  group_by: business_activity
  aggregate: total_thefts
  # percent
  percent_of_total_thefts is total_thefts / all(total_thefts)
}
>>>markdown
What is the percentage of total quantity lost for each period?
>>>malloy
run: chem_quantity_lost -> {
  group_by: period
  aggregate: total_quantity_lost
  # percent
  percent_of_total_quantity_lost_by_period is total_quantity_lost / all(total_quantity_lost)
}
>>>markdown
 What is the percentage of total thefts for each loss type?
>>>malloy
run: chem_thefts_by_state_and_loss_type -> {
  group_by: loss_type
  aggregate: total_thefts
  # percent
  percent_of_total_thefts_by_loss_type is total_thefts / all(total_thefts)
}
>>>markdown
What is the change in theft count for each state from one period to the next?
>>>malloy
run: chem_thefts_by_state_and_loss_type -> {
  group_by: state, period
  aggregate: total_thefts
  calculate: 
    previous_thefts is lag(total_thefts, 1)
    # percent
    theft_change_percent is (total_thefts - previous_thefts) / nullif(previous_thefts, 0)
  order_by: period
}
>>>markdown
How have theft counts grown for each business activity over time?
>>>malloy
run: chem_thefts_by_business_and_loss_type -> {
  group_by: business_activity, period
  aggregate: total_thefts
  calculate:
    previous_theft_count is lag(total_thefts, 1)
    # percent
    theft_growth_rate is (total_thefts - previous_theft_count) / nullif(previous_theft_count, 0)
  order_by: period
}
>>>markdown
What is the moving average of total thefts by business activity over the last 3 periods (months or years)?
>>>malloy
run: chem_thefts_by_business_and_loss_type -> {
  group_by: business_activity, period
  aggregate: total_thefts
  calculate: moving_avg_thefts is avg_moving(total_thefts, 3)
  order_by: period
}
>>>markdown
How can we visualize the moving average of theft counts over different periods?
>>>malloy
# line_chart
run: chem_thefts_by_state_and_loss_type -> {
  group_by: period
  aggregate: total_thefts
  calculate: moving_avg_thefts is avg_moving(total_thefts, 3)
  order_by: period
}
>>>markdown
Visualize quantity lost in business activity
>>>malloy
# scatter_chart
run: csub_quantity_lost -> {
  group_by: business_activity
  aggregate: total_quantity_lost is sum(milliliter)
}
>>>markdown
How does each loss type change over time (e.g., monthly or yearly)?
>>>malloy
run: chem_thefts_by_state_and_loss_type -> {
  group_by: loss_type
  group_by: period
  aggregate: total_thefts is count()
}
>>>markdown
What percentage of total thefts is attributed to each loss type?
>>>malloy
run: chem_thefts_by_state_and_loss_type -> {
  group_by: loss_type
  aggregate: total_thefts is count()
  # percent
  aggregate: theft_percent_of_total is total_thefts / all(total_thefts)
}
>>>markdown
What is the percentage change in theft counts by state?
>>>malloy
run: chem_thefts_by_state_and_loss_type -> {
  group_by: state
  aggregate: total_thefts is count()
  calculate: theft_percentage_change is (total_thefts - lag(total_thefts)) / lag(total_thefts)
}
>>>markdown
What is the cumulative theft count by loss type?
>>>malloy
run: chem_thefts_by_state_and_loss_type -> {
  group_by: loss_type
  aggregate: cumulative_theft_count is count()
}
>>>markdown
 How do theft counts vary over time for each loss type?
>>>malloy
run: chem_thefts_by_state_and_loss_type -> {
  group_by: period
  group_by: loss_type
  aggregate: total_thefts is count()
}
>>>markdown
How did chemical loss by loss type over the years?
>>>malloy
run: csub_quantity_lost ->{
    group_by: loss_type
    nest: byyear is{
        group_by: period
        aggregate: instances is count()
    }
}
>>>markdown
What state has the most chemical thefts?
>>>malloy

run: chem_quantity_lost ->{
    group_by: state
    aggregate: total_unit is sum(unit){where: loss_type = "EMPLOYEE THEFT (OR SUSPECTED)" or loss_type = "BREAK-IN/BURGLARY"}
    order_by: total_unit desc
    nest: bylosstype is{
        where: loss_type = "EMPLOYEE THEFT (OR SUSPECTED)" or loss_type = "BREAK-IN/BURGLARY"
        group_by: loss_type
        aggregate: total_quantity_lost
        aggregate: total_unit is sum(unit)
        order_by: total_unit desc
        limit:2
    }
    limit: 1
}
>>>markdown
What is the amount of chemicals was lost in Washington State?
>>>malloy
run: chem_quantity_lost ->{
    group_by: state
    where: state = "WA"
    aggregate: total_quantity_lost
    aggregate: total_unit is sum(unit)
}
>>>markdown
What is the amount of chemicals was lost in Pennsylvania State?
>>>malloy
run: chem_quantity_lost ->{
    group_by: state
    where: state = "PA"
    aggregate: total_quantity_lost
    aggregate: total_unit is sum(unit)
}
>>>markdown
What is the amount of chemicals was lost in Florida?
>>>malloy
run: chem_quantity_lost ->{
    group_by: state
    where: state = "FL"
    aggregate: total_quantity_lost
    aggregate: total_unit is sum(unit)
}
>>>markdown
What are the largest single losses of controlled substance by loss type?
>>>malloy
# bar_chart
run: csub_quantity_lost ->{
    group_by:state
    nest: bylosstype is{
        select:loss_type
        select:unit
        select: business_activity
        order_by: unit desc
        limit:1 
    }
}
>>>markdown
Which state loses the most controlled substance by theft?
>>>malloy
run:csub_quantity_lost ->{
    group_by: state
    nest: bylosstype is{
        where: loss_type = "EMPLOYEE THEFT (OR SUSPECTED)" or loss_type = "BREAK-IN/BURGLARY"
        group_by: loss_type
        aggregate: total_quantity_lost 
        aggregate: total_unit is sum(unit)
        aggregate: total_gram is sum(gram)
        aggregate: total_mgram is sum(milligram)
        order_by: total_unit desc
        limit:2
    }
}
>>>markdown
What year had the most chemical loss instances?
>>>malloy
run: chem_quantity_lost ->{
    aggregate: instances is count()
    group_by: period
}
>>>markdown
What is the largest chemical loss by unit?
>>>malloy
run: chem_quantity_lost ->{
    select: loss_type
    select: unit
    select: state
    select: business_activity
    order_by: unit desc
}
>>>markdown
What is the largest loss amount by loss type and state?
>>>malloy
run: chem_quantity_lost ->{
    group_by:state
    nest: losstype is{
        select:loss_type
        select:unit
        select: business_activity
        order_by: unit desc
        limit:1 
    }
}
>>>markdown
How much control substance  was lost in Washington State?
>>>malloy
run: csub_quantity_lost ->{
    group_by: state
    where: state = "WA"
    aggregate: total_quantity_lost 
    aggregate: total_unit is sum(unit)
    aggregate: total_gram is sum(gram)
    aggregate: total_mgram is sum(milligram)
}
>>>markdown
What is the loss type trend over the years?
>>>malloy
run: chem_quantity_lost ->{
    group_by: loss_type
    # line_chart
    nest: byyear is{
        group_by: period
        aggregate: instances is count()
    }   
}
>>>markdown
What is the amount of controlled substance was lost by business activity?
>>>malloy
run: csub_quantity_lost ->{
    group_by: business_activity
    aggregate: total_quantity_lost
    aggregate: total_unit is sum(unit)
    aggregate: total_gram is sum(gram)
    aggregate: total_mgram is sum(milligram)
    order_by: total_unit desc
}
>>>markdown
Which state had the most lost controlled substance?
>>>malloy
run: csub_quantity_lost ->{
    group_by: state
    aggregate: total_quantity_lost
    aggregate: total_unit is sum(unit)
    aggregate: total_gram is sum(gram)
    aggregate: total_mgram is sum(milligram)
    order_by: total_unit desc
    limit: 1
}
>>>markdown
What is the amount of chemicals loss by business activity trend each year?
>>>malloy
run: chem_quantity_lost ->{
    group_by: business_activity
    nest: byyear is{
        group_by: period
        aggregate: instances is count()
    }   
}
>>>markdown
What is the amount of controlled substance losses by loss type of each state?
>>>malloy
run: csub_quantity_lost ->{
    group_by: state
    nest: bystate is{
        group_by: loss_type
        aggregate: losses is count()
        order_by: losses desc
    }
}